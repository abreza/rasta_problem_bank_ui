{"version":3,"sources":["redux/actions/actionTypes.js","root/Root.js","redux/store/configureStore.js","index.js","components/editor/tiny_editor/additional_plugins/latex/index.js","components/editor/tiny_editor/additional_plugins/latex/plugin.js","redux/middleware/api/api.js","redux/actions/URLs.js","containers/Login.js","redux/actions/account.js","containers/Registration.js","containers/HomePage.js","containers/sampleQuestion.js","components/question/Difficulty.js","components/question/Tag.js","components/Frame/Frame.js","components/editor/tiny_editor/react_tiny/fixMath.js","components/editor/tiny_editor/react_tiny/Preview.js","containers/QuestionView.js","redux/actions/question.js","components/editor/tiny_editor/config.js","components/editor/tiny_editor/react_tiny/TinyEditorComponent.js","containers/Question.js","containers/UsersRating.js","containers/ProblemSet.js","components/NavBar/NavBar.js","components/NavBar/NavBarItems.js","root/PrivateRoute.js","root/Root.prod.js","redux/reducers/account.js","redux/reducers/questionProperties.js","redux/reducers/questions.js","redux/reducers/usersList.js","redux/reducers/index.js","redux/store/configureStore.prod.js","components/editor/tiny_editor/additional_plugins/textToSvg.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","USER_REQUEST","USER_SUCCESS","USER_FAILURE","USER_LIST_REQUEST","USER_LIST_SUCCESS","QUESTION_REQUEST","QUESTION_SUCCESS","QUESTION_FAILURE","QUESTION_SUBMIT_REQUEST","QUESTION_SUBMIT_SUCCESS","QUESTION_SUBMIT_FAILURE","QUESTION_PROPERTIES_REQUEST","QUESTION_PROPERTIES_SUCCESS","module","exports","require","store","configureStore","ReactDOM","render","document","getElementById","global","tinymce","util","Tools","resolve","open","editor","init_data","latex_data","x","update_svg","latex","to_svg","$","html","innerHTML","windowManager","title","body","type","items","name","label","buttons","text","primary","initialData","onSubmit","api","e","execCommand","close","ready","keyup","this","val","add","addCommand","register","ui","registry","addIcon","addButton","icon","tooltip","onAction","addMenuItem","on","t","math_span","target","parents","length","data","register$1","callApi","url","fetchOptions","token","a","headers","Autorization","JSON","stringify","fetch","response","json","CALL_API","next","action","callAPI","types","actionWith","finalAction","Object","assign","requestType","successType","failureType","getState","account","error","message","ROOT","LOGIN_USER","concat","REGISTER_USER","GET_QUESTION","SUBMIT_QUESTION","Login","Component","constructor","props","super","handleChange","value","setState","state","username","password","formErrorTitle","formErrorMessage","bind","handleSubmit","event","login","preventDefault","Grid","centered","container","doubling","stackable","Column","style","textAlign","direction","width","Header","as","Segment","Form","size","form_error","Input","required","fluid","iconPosition","placeholder","className","onChange","Message","header","content","Button","color","to","connect","actionTypes","URLs","method","Registration","firstName","lastName","phoneNumber","email","confirmPassword","elem","setCustomValidity","password_confirmation","first_name","last_name","phone_number","user","HomepageLayout","mobile","Container","inverted","fontSize","fontWeight","marginBottom","marginTop","Divider","hidden","margin","display","Link","Icon","sampleQuestion","id","adder","hardness","hardnessValue","minimumAppropriateGrade","maximumAppropriateGrade","events","sources","question","tags","subtags","answer","teachBoxes","Tag","toggleSlected","index","selected","Label","tag","selectable","onClick","Frame","initIframe","frameProps","print","removeHeaderAndFooter","addStyles","onUpdateContent","iframeEl","createElement","key","window","setContent","innerBody","write","styles","doc","styleElement","styleSheet","cssText","appendChild","createTextNode","getElementsByTagName","fixHeight","height","documentElement","scrollHeight","addCSS","href","link","rel","onload","setTimeout","componentDidMount","wrapper","contentWindow","componentDidUpdate","ref","fixMath","tinyMathEls","getElementsByClassName","i","dataset","TinyPreview","frame","onFixMath","QuestionView","questionId","map","tagName","location","pathname","console","log","questions","fetchQuestion","Row","relaxed","columns","attached","frameBorder","scrolling","section","question_id","config","branding","theme_url","directionality","extended_valid_elements","content_css","font_formats","plugins","toolbar","toolbar_groups","formatgroup","paragraphgroup","mobile_paragraphgroup","insertgroup","contextmenu","menubar","TinyEditorComponent","conf","init","getContent","replace","setup","outerHTML","initContent","nextQuestionID","Question","submitQuestion","redirect_after_submit","handleQuestionNameChange","shortInfo","handleDifficultyLevelChange","difficultyLevel","difficulty","allSources","allEvents","reviewStatus","appropriateGrades","source","questionText","questionAnswer","settings","start","min","max","step","handleTagChange","handleSubtagChange","getQuestion","getAnswer","findByName","res","forEach","subtag","pushNewSubtags","push","deleteNotSelectedSubtags","flag","updateSubtags","alert","questionEl","answerEl","activePage","paddingTop","paddingBottom","only","labelPosition","positive","updateInput","input","labeled","multiple","Dropdown","selection","allowAdditions","onAddItem","search","options","users","isLoggedIn","numberOfAddedQuestions","lastSeen","UsersRating","handlePaginationChange","redirect","totalPages","thisUser","ribbon","Table","striped","fixed","HeaderCell","Body","active","Cell","Pagination","onPageChange","UsersRatingPageActivePage","UsersRatingPageTotalPages","questionsShortInfo","ProblemSet","userType","celled","_","problemSetPageActivePage","problemSetPageTotalPages","NavBarMobile","children","leftItems","onPusherClick","onToggle","rightItems","visible","Sidebar","Pushable","Menu","animation","vertical","Pusher","dimmed","minHeight","Item","padding","Image","src","paddingLeft","paddingRight","position","NavBarDesktop","NavBarChildren","NavBar","handlePusher","handleToggle","Responsive","onlyMobile","minWidth","onlyTablet","Items","loggedIn","PrivateRoute","component","rest","Root","path","LoginPage","RegistrationPage","AccountsRating","Homepage","isFetching","questionProperties","isLoading","QUESTION_LIST_REQUEST","usersList","payload","allReducers","combineReducers","preloadedState","createStore","rootReducer","applyMiddleware","thunk","MathJax","tex2svg","em","ex","containerWidth","scale","lineWidth"],"mappings":"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","file":"static/js/main.73f41f65.chunk.js","sourcesContent":["export const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\n\nexport const REGISTER_REQUEST = 'REGISTER_REQUEST';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE';\n\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\n\nexport const USER_REQUEST = 'USER_REQUEST';\nexport const USER_SUCCESS = 'USER_SUCCESS';\nexport const USER_FAILURE = 'USER_FAILURE';\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\nexport const USER_LIST_FAILURE = 'USER_LIST_FAILURE';\n\nexport const QUESTION_REQUEST = 'QUESTION_REQUEST';\nexport const QUESTION_SUCCESS = 'QUESTION_SUCCESS';\nexport const QUESTION_FAILURE = 'QUESTION_FAILURE';\n\nexport const QUESTION_SUBMIT_REQUEST = 'QUESTION_SUBMIT_REQUEST';\nexport const QUESTION_SUBMIT_SUCCESS = 'QUESTION_SUBMIT_SUCCESS';\nexport const QUESTION_SUBMIT_FAILURE = 'QUESTION_SUBMIT_FAILURE';\n\nexport const QUESTION_LIST_REQUEST = 'QUESTION_LIST_REQUEST';\nexport const QUESTION_LIST_SUCCESS = 'QUESTION_LIST_SUCCESS';\nexport const QUESTION_LIST_FAILURE = 'QUESTION_LIST_FAILURE';\n\nexport const QUESTION_PROPERTIES_REQUEST = 'QUESTION_PROPERTIES_REQUEST';\nexport const QUESTION_PROPERTIES_SUCCESS = 'QUESTION_PROPERTIES_SUCCESS';\nexport const QUESTION_PROPERTIES_FAILURE = 'QUESTION_PROPERTIES_FAILURE';\n","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./Root.prod');\n} else {\n  module.exports = require('./Root.dev');\n}\n","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./configureStore.prod');\n} else {\n  module.exports = require('./configureStore.dev');\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Root from './root/Root';\nimport configureStore from './redux/store/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <Root />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n","require('./plugin.js');\n","/* global tinymce */\n\nimport $ from 'jquery';\nimport to_svg from '../textToSvg';\n\n(function () {\n  var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n  var open = function (editor, init_data = '') {\n    let latex_data = init_data;\n    let x = '';\n    let body_text =\n      '<div style=\"text-align: right; direction: rtl\">فرمول LaTeX موردنظر را در این کادر وارد کنید. (<a target=\"_blank\" href=\"https://www.hostmath.com/\">راهنما</a>)</div>';\n    editor.windowManager.open({\n      title: 'ویراستار فرمول ریاضی',\n      body: {\n        type: 'panel',\n        items: [\n          {\n            type: 'htmlpanel',\n            name: 'main',\n            label: 'معادله را اینجا بنویس',\n            html:\n              '<div class=\"latex-panel\" style=\"padding: 10px;\">' +\n              body_text +\n              '<textarea rows=\"2\" cols=\"50\" placeholder=\"\\\\sum\" style=\"direction: ltr; text-align: left;border: solid 3px #00c5ff; margin: 5px; padding: 10px; width: calc(100% - 10px); max-width: calc(100% - 10px); min-width: calc(100% - 10px);\">' +\n              latex_data +\n              '</textarea><p style=\"text-align: right; direction: rtl\">پیش‌نمایش:</p><div style=\"padding:20px; height: 50px\"><p style=\"font-size: 14px!important; text-align: center;\" class=\"preview\"></p></div></div>',\n          },\n        ],\n      },\n      buttons: [\n        {\n          type: 'cancel',\n          name: 'cancel',\n          text: 'لغو',\n        },\n        {\n          type: 'submit',\n          name: 'save',\n          text: 'ثبت',\n          primary: true,\n        },\n      ],\n      initialData: {},\n      onSubmit: function (api) {\n        let e =\n          '<span class=\"tiny-math\" data-latex=\"' +\n          latex_data +\n          '\">' +\n          x.innerHTML +\n          '</span>';\n        editor.execCommand('mceInsertContent', false, e);\n        api.close();\n      },\n    });\n    function update_svg(latex) {\n      if (latex) {\n        latex_data = latex;\n        x = to_svg(latex);\n        $('.preview').html(x.innerHTML);\n      }\n    }\n    $(function () {\n      $('.latex-panel textarea').ready(function () {\n        update_svg(latex_data);\n      });\n      $('.latex-panel textarea').keyup(function () {\n        update_svg($(this).val());\n      });\n    });\n  };\n\n  var register = function (editor) {\n    editor.addCommand('latexEditor', function () {\n      open(editor);\n    });\n  };\n\n  var register$1 = function (editor) {\n    editor.ui.registry.addIcon(\n      'latex',\n      '<svg width=\"24px\"  height=\"24px\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\t viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\"><g>\t<g>\t\t<path d=\"M263.507,62.967C265.179,51.833,272.833,40,283.729,40c11.028,0,20,8.972,20,20h40c0-33.084-26.916-60-60-60\t\t\tc-33.629,0-55.527,28.691-59.784,57.073L211.083,144h-61.354v40h55.436l-39.22,265.073l-0.116,0.937\t\t\tc-1.063,10.62-9.393,21.99-20.1,21.99c-11.028,0-20-8.972-20-20h-40c0,33.084,26.916,60,60,60\t\t\tc33.661,0,56.771-29.141,59.848-57.496L245.6,184h60.129v-40h-54.211L263.507,62.967z\"/>\t</g></g><g>\t<g>\t\t<polygon points=\"426.271,248 378.236,248 352.249,287.085 334.923,248 291.17,248 325.997,326.569 270.523,410 318.558,410 \t\t\t345.21,369.915 362.979,410 406.732,410 371.462,330.431 \t\t\"/>\t</g></g></svg>'\n    );\n    editor.ui.registry.addButton('latex', {\n      icon: 'latex',\n      tooltip: 'latex editor',\n      onAction: function () {\n        return open(editor);\n      },\n    });\n    editor.ui.registry.addMenuItem('latex', {\n      icon: 'latex',\n      text: 'latex editor',\n      onAction: function () {\n        return open(editor);\n      },\n    });\n    editor.on('DblClick', function (e, t) {\n      let math_span = $(e.target).parents('span.tiny-math');\n      if (math_span.length > 0) {\n        open(editor, $(math_span[0]).data('latex'));\n      }\n    });\n  };\n\n  function Plugin() {\n    global.add('latex', function (editor) {\n      register(editor);\n      register$1(editor);\n      return {};\n    });\n  }\n\n  Plugin();\n})();\n","const callApi = async (url, fetchOptions, token) => {\n  fetchOptions = {\n    ...fetchOptions,\n    headers: { ...fetchOptions.headers, Autorization: token },\n  }\n\n  fetchOptions = {\n    ...fetchOptions,\n    body: JSON.stringify(fetchOptions.body),\n  }\n\n  const response = await fetch(url, fetchOptions);\n  return await response.json();\n};\n\nexport const CALL_API = 'Call API';\n\nexport default (store) => (next) => async (action) => {\n  const callAPI = action[CALL_API];\n  if (typeof callAPI === 'undefined') {\n    return next(action);\n  }\n\n  let { url, fetchOptions } = callAPI;\n  const { types } = callAPI;\n\n  const actionWith = (data) => {\n    const finalAction = Object.assign({}, action, data);\n    delete finalAction[CALL_API];\n    return finalAction;\n  };\n\n  const [requestType, successType, failureType] = types;\n  next(actionWith({ type: requestType }));\n\n  try {\n    const { account } = store.getState();\n    const { token } = account;\n    const response = await callApi(url, fetchOptions, token);\n    return next(\n      actionWith({\n        response,\n        type: successType,\n      })\n    );\n  } catch (error) {\n    return next(\n      actionWith({\n        type: failureType,\n        error: error.message || 'Something bad happened',\n      })\n    );\n  }\n};\n","const ROOT = \"https://bank.rastaiha.ir/api/\";\n\nexport const GET_USERS_LIST = ROOT.concat('account/list'); //TODO: set properties to search with back\nexport const GET_USER_DATA = ROOT.concat('account/');\n\nexport const LOGIN_USER = ROOT.concat('signin/');\nexport const REGISTER_USER = ROOT.concat('signup/');\nexport const LOGOUT_USER = ROOT.concat('account/');\n\nexport const GET_QUESTION = ROOT.concat('question/');\nexport const SUBMIT_QUESTION = ROOT.concat('question/');\nexport const GET_QUESTION_PROPERTIES = ROOT.concat('question/properties'); //TODO: set url with back\nexport const GET_QUESTIONS_LIST = ROOT.concat('question/list'); //TODO: set properties to search with back\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n} from 'semantic-ui-react';\nimport { login } from '../redux/actions/account';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      formErrorTitle: '',\n      formErrorMessage: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = (e, { name, value }) => this.setState({ [name]: value });\n\n  async handleSubmit(event) {\n    const { username, password } = this.state;\n    this.props.login(username, password);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <Grid centered container doubling stackable>\n        <Grid.Column\n          style={{ textAlign: 'center', direction: 'rtl' }}\n          width={6}\n        >\n          <Header as=\"h2\" textAlign=\"center\">\n            ورود\n          </Header>\n          <Segment>\n            <Form\n              size=\"large\"\n              onSubmit={this.handleSubmit}\n              error={!!this.state.form_error}\n            >\n              <Form.Input\n                name=\"username\"\n                required\n                fluid\n                icon=\"user\"\n                iconPosition=\"right\"\n                placeholder=\"نام کاربری\"\n                className=\"persian-input\"\n                value={this.state.username}\n                onChange={this.handleChange}\n              />\n\n              <Form.Input\n                name=\"password\"\n                required\n                fluid\n                icon=\"lock\"\n                iconPosition=\"right\"\n                placeholder=\"رمز عبور\"\n                type=\"password\"\n                className=\"persian-input\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n\n              <Message\n                error\n                header={this.state.formErrorTitle}\n                content={this.state.formErrorMessage}\n              />\n\n              <Button color=\"blue\" fluid size=\"large\">\n                بزن بریم\n              </Button>\n            </Form>\n          </Segment>\n          <Message>\n            هنوز ثبت‌نام نکردی؟ <Link to=\"/registration\">ثبت‌نام کن!</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapStatoToProps = (state) => {\n}\n\nexport default connect(mapStatoToProps, {\n  login,\n})(Login)","import * as actionTypes from './actionTypes';\nimport * as URLs from './URLs';\n\nimport { CALL_API } from '../middleware/api/api';\n\nconst fetchUser = (account_id) => ({\n  [CALL_API]: {\n    types: [\n      actionTypes.USER_REQUEST,\n      actionTypes.USER_SUCCESS,\n      actionTypes.USER_FAILURE,\n    ],\n    url: URLs.GET_USER_DATA + account_id,\n    fetchOptions: {\n      method: 'GET',\n    },\n  },\n});\n\nexport const loadUser = (user_id, requiredFields = []) => (\n  dispatch,\n  getState\n) => {\n  const user = getState().users[user_id];\n  if (user && requiredFields.every((key) => user.hasOwnProperty(key))) {\n    return null;\n  }\n  return dispatch(fetchUser(user_id));\n};\n\nexport const login = (username, password) => ({\n  [CALL_API]: {\n    types: [\n      actionTypes.LOGIN_REQUEST,\n      actionTypes.LOGIN_SUCCESS,\n      actionTypes.LOGIN_FAILURE,\n    ],\n    url: URLs.LOGIN_USER,\n    fetchOptions: {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: { username, password },\n    },\n  },\n});\n\nexport const register = (\n  username,\n  password,\n  first_name,\n  last_name,\n  phone_number,\n  email,\n) => ({\n  [CALL_API]: {\n    types: [\n      actionTypes.REGISTER_REQUEST,\n      actionTypes.REGISTER_SUCCESS,\n      actionTypes.REGISTER_FAILURE,\n    ],\n    url: URLs.REGISTER_USER,\n    fetchOptions: {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: {\n        user: { username, password },\n        first_name,\n        last_name,\n        phone_number,\n        email,\n      },\n    },\n  },\n});\n\nexport const logout = () => ({\n  [CALL_API]: {\n    types: [\n      actionTypes.LOGOUT_REQUEST,\n      actionTypes.LOGOUT_SUCCESS,\n      actionTypes.LOGOUT_FAILURE,\n    ],\n    url: URLs.LOGOUT_USER,\n    fetchOptions: {\n      method: 'GET',\n    },\n  },\n});\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { register } from '../redux/actions/account';\nimport { connect } from 'react-redux';\n\n\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      phoneNumber: '',\n      email: '',\n      formErrorTitle: '',\n      formErrorMessage: '',\n    };\n\n    this.confirmPassword = this.confirmPassword.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = (e, { name, value }) => this.setState({ [name]: value });\n\n  confirmPassword(e) {\n    let elem = e.target;\n    if (this.state.password !== elem.value) {\n      elem.setCustomValidity(\"Passwords Don't Match\");\n    } else {\n      elem.setCustomValidity('');\n    }\n  }\n  async handleSubmit(event) {\n    const { username, password, firstName, lastName, phoneNumber, email } = this.state;\n    this.props.register(username, password, firstName, lastName, phoneNumber, email);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <Grid centered doubling container stackable>\n        <Grid.Column\n          style={{ textAlign: 'center', direction: 'rtl' }}\n          width={6}\n        >\n          <Header as=\"h2\" textAlign=\"center\">\n            ثبت‌نام\n          </Header>\n          <Segment>\n            <Form\n              size=\"large\"\n              onSubmit={this.handleSubmit}\n              error={!!this.state.form_error}\n            >\n              <Form.Input\n                name=\"username\"\n                type=\"username\"\n                required\n                fluid\n                icon=\"user\"\n                iconPosition=\"right\"\n                placeholder=\"نام کاربری\"\n                className=\"persian-input\"\n                value={this.state.username}\n                onChange={this.handleChange}\n              />\n\n              <Form.Input\n                name=\"password\"\n                required\n                fluid\n                icon=\"lock\"\n                iconPosition=\"right\"\n                placeholder=\"رمز عبور\"\n                type=\"password\"\n                className=\"persian-input\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n\n              <Form.Input\n                name=\"password_confirmation\"\n                required\n                fluid\n                icon=\"lock\"\n                iconPosition=\"right\"\n                placeholder=\"تکرار رمز عبور\"\n                type=\"password\"\n                className=\"persian-input\"\n                value={this.state.password_confirmation}\n                onChange={this.confirmPassword}\n              />\n\n              <Form.Input\n                name=\"firstName\"\n                required\n                fluid\n                icon=\"user\" //todo\n                iconPosition=\"right\"\n                placeholder=\"نام\"\n                type=\"name\"\n                className=\"persian-input\"\n                value={this.state.firstName}\n                onChange={this.handleChange}\n              />\n\n              <Form.Input\n                name=\"lastName\"\n                required\n                fluid\n                icon=\"user\" //todo\n                iconPosition=\"right\"\n                placeholder=\"نام خانوادگی\"\n                type=\"name\"\n                className=\"persian-input\"\n                value={this.state.lastName}\n                onChange={this.handleChange}\n              />\n\n              <Form.Input\n                name=\"phoneNumber\"\n                required\n                fluid\n                icon=\"phone\"\n                iconPosition=\"right\"\n                placeholder=\"شماره موبایل\"\n                type=\"phone\" //todo:\n                className=\"persian-input\"\n                value={this.state.phoneNumber}\n                onChange={this.handleChange}\n              />\n\n              <Form.Input\n                name=\"email\"\n                required\n                fluid\n                icon=\"mail\"\n                iconPosition=\"right\"\n                placeholder=\"ایمیل\"\n                type=\"mail\" //todo  \n                className=\"persian-input\"\n                value={this.state.email}\n                onChange={this.handleChange}\n              />\n\n              <Message\n                error\n                header={this.state.formErrorTitle}\n                content={this.state.formErrorMessage}\n              />\n              <Button type=\"submit\" color=\"blue\" fluid size=\"large\">\n                ثبت‌نام\n              </Button>\n            </Form>\n          </Segment>\n          <Message>\n            قبلاً ثبت‌نام کردی؟ <Link to=\"/login\">وارد شو!</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapStatoToProps = (state) => {\n\n}\n\nexport default connect(mapStatoToProps, {\n  register,\n})(Registration)","import React from 'react';\nimport { Button, Icon, Header, Container, Divider } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst HomepageLayout = ({ mobile }) => (\n  <Container text>\n    <Header\n      as=\"h1\"\n      content=\"بانک مسئله\"\n      inverted\n      style={{\n        fontSize: mobile ? '2em' : '4em',\n        fontWeight: 'normal',\n        marginBottom: 0,\n        color: 'black',\n        direction: 'rtl',\n        textAlign: 'center',\n        marginTop: mobile ? '1.5em' : '3em',\n      }}\n    />\n    <Divider hidden />\n    <Button\n      primary\n      size=\"huge\"\n      style={{\n        direction: 'rtl',\n        textAlign: 'center',\n        margin: 'auto',\n        display: 'table',\n      }}\n      as={Link}\n      to=\"/problemset\"\n    >\n      بزن بریم!\n      <Icon name=\"left arrow\" />\n    </Button>\n  </Container>\n);\n\nexport default HomepageLayout;\n","const sampleQuestion = {\n  name: 'الاغ مش‌حسن',\n  id: 123,\n  adder: 'سید علیرضا هاشمی',\n\n  hardness: {\n    hardnessValue: 8,\n    minimumAppropriateGrade: 9,\n    maximumAppropriateGrade: 12,\n  },\n\n  events: ['مدرسه تابستانه ۲۰۲۰', 'مدرسه تابستانه ۲۰۱۹'],\n  sources: ['codeforces.com', 'کتاب مش‌میرزا'],\n  question: 'الاغ مش‌حسن چند پا دارد؟',\n  tags: ['ترکیبیات', 'هندسه'],\n  subtags: ['لانه کبوتری', 'مسطحه'],\n\n  answer: {\n    answer: '۴ تا',\n    teachBoxes: {},\n  },\n};\n\nexport default sampleQuestion;\n","import React, { Component } from 'react';\nimport { Segment, Progress, Icon } from 'semantic-ui-react';\n\nconst grades = [\n  'اول',\n  'دوم',\n  'سوم',\n  'چهارم',\n  'پنجم',\n  'ششم',\n  'هفتم',\n  'هشتم',\n  'نهم',\n  'دهم',\n  'یازدهم',\n  'دوازدهم',\n]\n\nexport default class Difficulty extends Component {\n  render() {\n    return (\n      <div>\n        <Progress\n          textAlign=\"center\"\n          value={this.props.difficulty.difficultyLevel}\n          total={10}\n          color=\"red\"\n        >\n          سختی: {this.props.difficulty.difficultyLevel}\n        </Progress>\n        <Segment >\n          <Icon name=\"child\" size=\"large\"></Icon>\n          پایین‌ترین پایه‌ی مناسب:{' '}\n          <b>\n            {grades[this.props.difficulty.appropriateGrades[0] - 1]}\n          </b>\n          <br /><br />\n          <Icon name=\"male\" size=\"large\"></Icon>\n          بالاترین پایه‌ی مناسب:{' '}\n          <b>\n            {grades[this.props.difficulty.appropriateGrades[1] - 1]}\n          </b>\n        </Segment>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Label } from 'semantic-ui-react';\n\nexport default class Tag extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleSlected = this.toggleSlected.bind(this);\n  }\n\n  toggleSlected() {\n    if (this.props.onChange) {\n      this.props.onChange(this.props.index, !this.props.selected);\n    }\n  }\n\n  render() {\n    return (\n      <span style={{ margin: '3px', display: 'inline-block' }}>\n        <Label\n          tag\n          size=\"large\"\n          className={\n            this.props.selectable\n              ? this.props.selected\n                ? 'selectable-tag selected'\n                : 'selectable-tag'\n              : ''\n          }\n          onClick={this.props.selectable ? this.toggleSlected : () => { }}\n        >\n          {this.props.name}\n        </Label>\n      </span>\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/iframe-has-title */\n\nimport React, { Component } from 'react';\n\nexport default class Frame extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initIframe(props.frameProps);\n    this.print = this.print.bind(this);\n    this.removeHeaderAndFooter = this.removeHeaderAndFooter.bind(this);\n    this.addStyles = this.addStyles.bind(this);\n    this.onUpdateContent = this.onUpdateContent.bind(this);\n  }\n\n  initIframe(frameProps) {\n    this.iframeEl = document.createElement('iframe');\n    for (let key in frameProps) {\n      this.iframeEl[key] = frameProps[key];\n    }\n  }\n\n  onUpdateContent() {\n    if (!!this.props.onUpdateContent) {\n      this.props.onUpdateContent(this, this.state.window);\n    }\n  }\n\n  setContent(innerBody) {\n    const body = '<body>' + innerBody + '</body>';\n    this.state.window.document.open();\n    this.state.window.document.write(body);\n    this.state.window.document.close();\n    this.onUpdateContent();\n  }\n\n  addStyles(styles) {\n    const doc = this.state.window.document;\n    const styleElement = doc.createElement('style');\n    styleElement.type = 'text/css';\n    if (styleElement.styleSheet) {\n      styleElement.styleSheet.cssText = styles;\n    } else {\n      styleElement.appendChild(doc.createTextNode(styles));\n    }\n    doc.getElementsByTagName('head')[0].appendChild(styleElement);\n  }\n\n  fixHeight() {\n    this.iframeEl.style.height =\n      this.state.window.document.documentElement.scrollHeight + 'px';\n  }\n\n  addCSS(href) {\n    const doc = this.state.window.document;\n\n    var link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.type = 'text/css';\n    link.onload = () => {\n      setTimeout(() => {\n        this.fixHeight(); // TODO: fix font load time\n      }, 100);\n    };\n    link.href = href;\n\n    doc.getElementsByTagName('head')[0].appendChild(link);\n  }\n\n  removeHeaderAndFooter() {\n    this.addStyles('@page { size: auto; margin: 0mm }');\n  }\n  print() {\n    this.state.window.print();\n  }\n\n  componentDidMount() {\n    this.wrapper.appendChild(this.iframeEl);\n    const window = this.iframeEl.contentWindow;\n    this.setState({ window });\n  }\n  componentDidUpdate() {\n    this.setContent(this.props.content);\n    this.addStyles('body{direction: rtl; margin: 0}');\n    this.addCSS('/fonts/iranyekan/iranyekan.css');\n  }\n\n  render() {\n    return <div ref={(wrapper) => (this.wrapper = wrapper)}></div>;\n  }\n}\n","import to_svg from '../additional_plugins/textToSvg';\n\nconst fixMath = (doc) => {\n  const tinyMathEls = doc.getElementsByClassName('tiny-math');\n  for (let i = 0; i < tinyMathEls.length; i++) {\n    tinyMathEls[i].innerHTML = to_svg(tinyMathEls[i].dataset.latex).innerHTML;\n  }\n};\n\nexport default fixMath;\n","import React, { Component } from 'react';\nimport Frame from '../../../Frame/Frame';\nimport fixMath from './fixMath';\n\nexport default class TinyPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.onUpdateContent = this.onUpdateContent.bind(this);\n  }\n\n  print(frame) {\n    frame.removeHeaderAndFooter();\n    let rastaConfig = {};\n    frame.print(rastaConfig);\n  }\n\n  onUpdateContent(frame, window) {\n    fixMath(window.document);\n    if (!!this.props.onFixMath) {\n      this.props.onFixMath(window.document);\n    }\n  }\n\n  render() {\n    return (\n      <div style={this.props.hidden ? { display: 'none' } : {}}>\n        <Frame\n          onUpdateContent={this.onUpdateContent}\n          content={this.props.content}\n          frameProps={this.props.frameProps}\n        />\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-undef */\nimport React, { Component } from 'react';\n\nimport {\n  Grid,\n  Header,\n  Icon,\n  Container,\n  Segment,\n  Divider,\n  Label,\n} from 'semantic-ui-react';\n\nimport sampleQuestion from './sampleQuestion';\nimport Difficulty from '../components/question/Difficulty';\nimport Tag from '../components/question/Tag';\nimport { connect } from 'react-redux';\nimport { fetchQuestion } from '../redux/actions/question'\n\nimport TinyPreview from '../components/editor/tiny_editor/react_tiny/Preview';\n\nclass QuestionView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      question: '',\n      questionId: '',\n      tags: sampleQuestion.tags.map((tagName, i) => (\n        <Tag key={tagName} name={tagName}></Tag>\n      )),\n      subtags: sampleQuestion.subtags.map((tagName, i) => (\n        <Tag key={tagName} name={tagName}></Tag>\n      )),\n    };\n  }\n\n  componentDidMount() {\n    const questionId = window.location.pathname;\n    console.log(questionId + \"SSSSSSSSSSSSSSSSSSSSSSSSSSSSS\");\n    this.setState({ question: this.props.questions[questionId] });\n    this.setState({ questionId: questionId });\n    this.props.fetchQuestion(questionId);\n  }\n\n  render() {\n    return (\n      <Grid centered container stackable doubling style={{ direction: 'rtl' }}>\n        <Grid.Row centered relaxed>\n          <Grid.Column>\n            <Header as=\"h1\" textAlign=\"center\">\n              {'«' + this.state.question.name + '»'}\n            </Header>\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row columns={2}>\n          <Grid.Column\n            width={11}\n            style={{ textAlign: 'right', direction: 'rtl' }}\n          >\n            <Segment textAlign=\"center\">\n              <Label size=\"large\" attached=\"top\">\n                <Icon name=\"pencil\" size=\"large\" />\n                {' صورت مسئله'}\n              </Label>\n              <Container fluid textAlign=\"right\" style={{ fontSize: 20 }}>\n                <br />\n                <TinyPreview\n                  frameProps={{\n                    frameBorder: '0',\n                    scrolling: 'no',\n                    width: '100%',\n                  }}\n                  content=\"<p>سلام</p><p style='text-align: center'><span class='tiny-math'data-latex='\\sum_{w \\rightarrow 5}' ></span></p>\"\n                />\n                {/* {this.state.question.questionText} */}\n              </Container>\n            </Segment>\n\n            <Segment textAlign=\"center\">\n              <Label size=\"large\" attached=\"top\">\n                <Icon name=\"book\" size=\"large\" />\n                {' پاسخ'}\n              </Label>\n              <Container fluid textAlign=\"right\" style={{ fontSize: 20 }}>\n                <br />\n                {/* {this.state.question.answer.answer} */}\n              </Container>\n            </Segment>\n          </Grid.Column>\n\n          <Grid.Column\n            width={5}\n            style={{ textAlign: 'right', direction: 'rtl' }}\n          >\n            <Segment textAlign=\"center\">\n              <Header content={'شناسنامه'} as=\"h2\" textAlign=\"center\" />\n              <Divider section></Divider>\n              {/* <Difficulty\n                // difficulty={this.state.question.difficulty}\n              ></Difficulty> */}\n              <Segment>\n                <Label attached=\"top\">مباحث کلی سوال</Label>\n                {this.state.tags}\n              </Segment>\n              <Segment>\n                <Label attached=\"top\">مباحث ریزتر</Label>\n                {this.state.subtags}\n              </Segment>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  questions: state.questions,\n});\n\nexport default connect(mapStateToProps, { fetchQuestion })(QuestionView);\n","import * as actionTypes from './actionTypes';\nimport * as URLs from './URLs';\n\nimport { CALL_API } from '../middleware/api/api';\n\nexport const fetchQuestion = (question_id) => ({\n  [CALL_API]: {\n    types: [\n      actionTypes.QUESTION_REQUEST,\n      actionTypes.QUESTION_SUCCESS,\n      actionTypes.QUESTION_FAILURE,\n    ],\n    url: URLs.GET_QUESTION + question_id,\n    fetchOptions: {\n      method: 'GET',\n    },\n  },\n});\n\n// TODO: save on store\nexport const submitQuestion = (question) => ({\n  [CALL_API]: {\n    types: [\n      actionTypes.QUESTION_SUBMIT_REQUEST,\n      actionTypes.QUESTION_SUBMIT_SUCCESS,\n      actionTypes.QUESTION_SUBMIT_FAILURE,\n    ],\n    url: URLs.SUBMIT_QUESTION,\n    fetchOptions: {\n      method: 'POST',\n      body: question,\n    },\n  },\n});\n","import 'tinymce/icons/default/icons';\n\nimport 'tinymce/plugins/advlist';\nimport 'tinymce/plugins/wordcount';\nimport 'tinymce/plugins/table';\nimport 'tinymce/plugins/autolink';\nimport 'tinymce/plugins/lists';\nimport 'tinymce/plugins/link';\nimport 'tinymce/plugins/image';\nimport 'tinymce/plugins/imagetools';\nimport 'tinymce/plugins/charmap';\nimport 'tinymce/plugins/print';\nimport 'tinymce/plugins/preview';\nimport 'tinymce/plugins/anchor';\nimport 'tinymce/plugins/searchreplace';\nimport 'tinymce/plugins/visualblocks';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/contextmenu';\nimport 'tinymce/plugins/fullscreen';\nimport 'tinymce/plugins/insertdatetime';\nimport 'tinymce/plugins/media';\nimport 'tinymce/plugins/table';\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/help';\nimport 'tinymce/plugins/wordcount';\nimport 'tinymce/plugins/directionality';\nimport './additional_plugins/latex';\n\nimport 'tinymce/skins/ui/oxide/skin.min.css';\n\nlet config = {\n  height: 300,\n  width: '100%',\n  branding: false,\n  theme_url: process.env.PUBLIC_URL + '/tinymce/themes/silver/theme.js',\n  directionality: 'rtl',\n  extended_valid_elements:\n    'svg[*],defs[*],pattern[*],desc[*],metadata[*],g[*],mask[*],path[*],line[*],marker[*],rect[*],circle[*],ellipse[*],polygon[*],polyline[*],linearGradient[*],radialGradient[*],stop[*],image[*],view[*],text[*],textPath[*],title[*],tspan[*],glyph[*],symbol[*],switch[*],use[*]',\n  content_css:\n    '/fonts/iranyekan/iranyekan.css, https://fonts.googleapis.com/css?family=Almarai|Baloo+Bhaijaan|Changa|El+Messiri|Harmattan|Lalezar|Markazi+Text&display=swap',\n  font_formats:\n    'Almarai=almarai,sans-serif;' +\n    'Andale Mono=andale mono,times;' +\n    'Arial=arial,helvetica,sans-serif;' +\n    'Arial Black=arial black,avant garde;' +\n    'Baloo Bhaijaan=Baloo Bhaijaan, cursive;' +\n    'Book Antiqua=book antiqua,palatino;' +\n    'Changa=Changa, sans-serif;' +\n    'Comic Sans MS=comic sans ms,sans-serif;' +\n    'Courier New=courier new,courier;' +\n    'Century Gothic=century_gothic;' +\n    'El Messiri=El Messiri, sans-serif;' +\n    'Georgia=georgia,palatino;' +\n    'Gill Sans MT=gill_sans_mt;' +\n    'Gill Sans MT Bold=gill_sans_mt_bold;' +\n    'Gill Sans MT BoldItalic=gill_sans_mt_bold_italic;' +\n    'Gill Sans MT Italic=gill_sans_mt_italic;' +\n    'Harmattan=Harmattan, sans-serif;' +\n    'Helvetica=helvetica;' +\n    'iranyekan=iranyekan, sans-serif;' +\n    'IRANSans=IRANSans-web, sans-serif;' +\n    'Impact=impact,chicago;' +\n    'Iskola Pota=iskoola_pota;' +\n    'Iskola Pota Bold=iskoola_pota_bold;' +\n    'Lalezar=Lalezar, cursive;' +\n    'Markazi Text=Markazi Text, serif;' +\n    'Symbol=symbol;' +\n    'Tahoma=tahoma,arial,helvetica,sans-serif;' +\n    'Terminal=terminal,monaco;' +\n    'Times New Roman=times new roman,times;' +\n    'Trebuchet MS=trebuchet ms,geneva;' +\n    'Verdana=verdana,geneva;' +\n    'Webdings=webdings;' +\n    'Wingdings=wingdings,zapf dingbats;',\n  plugins: [\n    'advlist autolink lists link image imagetools charmap print preview anchor',\n    'searchreplace visualblocks code fullscreen latex contextmenu',\n    'insertdatetime media table paste code help wordcount directionality',\n  ],\n  toolbar:\n    'undo redo | styleselect | formatgroup | bullist numlist align paragraphgroup | latex link image emoticons table | charmap hr | ',\n  toolbar_groups: {\n    formatgroup: {\n      icon: 'format',\n      tooltip: 'Formatting',\n      items:\n        'bold italic underline strikethrough | forecolor backcolor | superscript subscript | removeformat',\n    },\n    paragraphgroup: {\n      icon: 'paragraph',\n      tooltip: 'حالت پاراگراف',\n      items: 'rtl ltr | indent outdent',\n    },\n    mobile_paragraphgroup: {\n      icon: 'paragraph',\n      tooltip: 'حالت پاراگراف',\n      items:\n        'bullist numlist | alignleft aligncenter alignright | rtl ltr | indent outdent',\n    },\n    insertgroup: {\n      icon: 'plus',\n      tooltip: 'درج',\n      items: 'link image emoticons table charmap hr',\n    },\n  },\n  contextmenu:\n    'link image imagetools table latex spellchecker | bold italic underline strikethrough | forecolor backcolor | removeformat',\n  menubar: false,\n  mobile: {\n    toolbar_groups: {\n      formatgroup: {\n        icon: 'format',\n        tooltip: 'Formatting',\n        items:\n          'bold italic underline strikethrough | forecolor backcolor | superscript subscript | removeformat',\n      },\n      mobile_paragraphgroup: {\n        icon: 'paragraph',\n        tooltip: 'حالت پاراگراف',\n        items:\n          'bullist numlist | alignleft aligncenter alignright | rtl ltr | indent outdent',\n      },\n    },\n    menubar: false,\n    toolbar:\n      'undo redo | styleselect | formatgroup mobile_paragraphgroup | latex link image emoticons table | charmap hr | ',\n  },\n};\n\nexport default config;\n","import React, { Component } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport TinyPreview from './Preview';\n\nimport 'tinymce/tinymce';\n\nimport conf from '../config';\n\nexport default class TinyEditorComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { editor: null };\n    this.config = {\n      ...conf,\n      id: this.props.id,\n    };\n\n    this.init = this.init.bind(this);\n  }\n\n  getContent() {\n    return this.state.editor\n      .getContent()\n      .replace(/<svg.*\\/svg>/g, '')\n      .replace(/&nbsp;/g, '');\n  }\n\n  init(doc) {\n    if (!this.config.setup) {\n      this.config.setup = (editor) => {\n        this.setState({ editor });\n        const content = doc.body.outerHTML;\n        editor.on('init', () => {\n          editor.setContent(content);\n        });\n      };\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.initContent && (\n          <TinyPreview\n            frameProps={{\n              frameBorder: '0',\n              scrolling: 'no',\n              width: '0',\n            }}\n            hidden={true}\n            content={this.props.initContent}\n            onFixMath={this.init}\n          />\n        )}\n\n        <Editor id={this.props.id} init={this.config} />\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Grid,\n  Header,\n  Input,\n  Segment,\n  Label,\n  Container,\n  Divider,\n  Button,\n  Icon,\n  Dropdown,\n} from 'semantic-ui-react';\n\nimport { Redirect } from 'react-router';\nimport { Slider } from 'react-semantic-ui-range';\nimport Tag from '../components/question/Tag';\nimport Editor from '../components/editor/tiny_editor/react_tiny/TinyEditorComponent';\nimport { submitQuestion } from '../redux/actions/question';\nimport '../styles/Question.css';\nimport { connect } from 'react-redux';\n\nconst sources = [\n  { key: '0', text: 'المپیاد ملی روسیه ۲۰۱۹', value: '0' },\n  { key: '1', text: 'المپیاد ملی روسیه ۲۰۱۰', value: '1' },\n  { key: '2', text: 'المپیاد ملی رومانی ۲۰۱۹', value: '2' },\n];\n\nconst events = [\n  { key: '0', text: 'عباس‌آباد', value: '0' },\n  { key: '1', text: 'بوشهر', value: '1' },\n  { key: '2', text: 'سراوان', value: '2' },\n  { key: '3', text: 'کابار', value: '3' },\n];\n\nconst tags = [\n  {\n    name: 'ترکیبیات',\n    subtags: [\n      {\n        name: 'هندسه ترکیبیاتی',\n      },\n      {\n        name: 'لانه کبوتری',\n      },\n      {\n        name: 'استقرا',\n      },\n    ],\n  },\n  {\n    name: 'هندسه',\n    subtags: [\n      {\n        name: 'مسطحه',\n      },\n      {\n        name: 'هندسه ترکیبیاتی',\n      },\n    ],\n  },\n];\n\nlet nextQuestionID = 1000;\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allSources: sources, //TODO: should change with this.props.allCources\n      allEvents: events, //TODO: should change with this.props.allEvents\n      question: {\n        shortInfo: {\n          id: ++nextQuestionID,\n          name: '',\n          tags: tags, //TODO: should change with this.props.allTags\n          difficultyLevel: 5,\n          reviewStatus: 'W',\n        },\n        difficulty: {\n          difficultyLevel: 5,\n          appropriateGrades: [9, 12],\n        },\n        // author: this.props.account.name,\n        events: [],\n        source: '',\n        subtags: [],\n        questionText: '', //TODO: TINY!\n        questionAnswer: '', //TODO: TINY!\n      },\n      redirect_after_submit: false,\n    };\n\n    this.state.settings = {\n      start: [9, 11],\n      min: 7,\n      max: 12,\n      step: 1,\n      onChange: (appropriateGrades) => {\n        this.setState({\n          question: {\n            ...this.state.question,\n            difficulty: {\n              ...this.state.question.difficulty,\n              appropriateGrades: appropriateGrades,\n            },\n          },\n        });\n      },\n    };\n\n    this.handleTagChange = this.handleTagChange.bind(this);\n    this.handleSubtagChange = this.handleSubtagChange.bind(this);\n    this.getQuestion = this.getQuestion.bind(this);\n    this.getAnswer = this.getAnswer.bind(this);\n    this.handleQuestionNameChange = this.handleQuestionNameChange.bind(this);\n    this.handleQuestionNameChange = this.handleQuestionNameChange.bind(this);\n    this.handleDifficultyLevelChange = this.handleDifficultyLevelChange.bind(\n      this\n    );\n\n    setTimeout(() => {\n      this.getQuestion();\n      this.getAnswer();\n    }, 5000);\n  }\n\n  handleSubmit = () => {\n    this.props.submitQuestion(this.state.question);\n    this.setState({ redirect_after_submit: true });\n  };\n\n  handleQuestionNameChange = (e) => {\n    this.setState({\n      question: {\n        ...this.state.question,\n        shortInfo: {\n          ...this.state.question.shortInfo,\n          name: e.target.value,\n        },\n      },\n    });\n  };\n\n  handleDifficultyLevelChange = (e) => {\n    this.setState({\n      question: {\n        ...this.state.question,\n        shortInfo: {\n          ...this.state.question.shortInfo,\n          difficultyLevel: e.target.value,\n        },\n        difficulty: {\n          ...this.state.question.difficulty,\n          difficultyLevel: e.target.value,\n        },\n      },\n    });\n  };\n\n  findByName(subtags, name) {\n    let res = -1;\n    subtags.forEach((subtag, index) => {\n      if (subtag.name === name) {\n        res = index;\n        return;\n      }\n    });\n    return res;\n  }\n\n  pushNewSubtags(subtags) {\n    subtags.forEach((subtag) => {\n      if (this.findByName(this.state.question.subtags, subtag.name) === -1) {\n        this.state.question.subtags.push({\n          name: subtag.name,\n          selected: false,\n        });\n      }\n    });\n  }\n\n  deleteNotSelectedSubtags(subtags) {\n    subtags.forEach((subtag) => {\n      let flag = false;\n      this.state.question.shortInfo.tags.forEach((tag) => {\n        if (tag.selected && this.findByName(tag.subtags, subtag.name) > -1) {\n          flag = true;\n        }\n      });\n      if (!flag) {\n        let index = this.findByName(this.state.question.subtags, subtag.name);\n        delete this.state.question.subtags[index];\n      }\n    });\n  }\n\n  updateSubtags(index, selected) {\n    if (selected) {\n      this.pushNewSubtags(this.state.question.shortInfo.tags[index].subtags);\n    } else {\n      this.deleteNotSelectedSubtags(\n        this.state.question.shortInfo.tags[index].subtags\n      );\n    }\n  }\n\n  handleTagChange(index, selected) {\n    this.state.question.shortInfo.tags[index].selected = selected;\n    this.updateSubtags(index, selected);\n    this.setState({\n      question: {\n        ...this.state.question,\n        shortInfo: {\n          ...this.state.question.shortInfo,\n          tags: this.state.question.shortInfo.tags,\n        },\n        subtags: this.state.question.subtags,\n      },\n    });\n  }\n\n  handleSubtagChange(index, selected) {\n    this.state.question.subtags[index].selected = selected;\n    this.setState({\n      question: {\n        ...this.state.question,\n        subtags: this.state.question.subtags,\n      },\n    });\n  }\n\n  getQuestion() {\n    alert(this.questionEl.getContent());\n  }\n\n  getAnswer() {\n    alert(this.answerEl.getContent());\n  }\n\n  render() {\n    if (this.state.redirect_after_submit) {\n      return <Redirect push to={'/problemset/page/' + this.state.activePage} />;\n    }\n\n    return (\n      <Container style={{ paddingTop: '10px', paddingBottom: '10px' }}>\n        <Grid centered stackable>\n          <Grid.Row centered relaxed>\n            <Grid.Column width={5}></Grid.Column>\n            <Grid.Column width={5}>\n              <Header as=\"h1\" textAlign=\"center\">\n                مسئله جدید\n              </Header>\n            </Grid.Column>\n            <Grid.Column\n              width={5}\n              only=\"computer\"\n              style={{ textAlign: 'right' }}\n            >\n              <Button\n                icon\n                labelPosition=\"left\"\n                positive\n                onClick={this.handleSubmit}\n              >\n                <Icon name=\"save\" />\n                ذخیره\n              </Button>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row columns={2} style={{ direction: 'rtl' }}>\n            <Grid.Column width={11}>\n              <Segment>\n                <Header content={'صورت مسئله'} as=\"h3\" textAlign=\"center\" />\n                <Editor\n                  ref={(questionEl) => (this.questionEl = questionEl)}\n                  id=\"QuestionTextArea\"\n                  initContent=\"<p>salam</p><p style='text-align: center'><span class='tiny-math' data-latex='\\sum'></span></p>\"\n                />\n                <Header content={'پاسخ'} as=\"h3\" textAlign=\"center\" />\n                <Editor\n                  ref={(answerEl) => (this.answerEl = answerEl)}\n                  id=\"AnswerTextArea\"\n                  initContent=\"<p>khubi?</p>\"\n                />\n              </Segment>\n            </Grid.Column>\n            <Grid.Column\n              width={5}\n              style={{ direction: 'rtl', textAlign: 'right' }}\n            >\n              <Segment style={{ direction: 'rtl' }}>\n                <Header content={'شناسنامه'} as=\"h2\" textAlign=\"center\" />\n                <Divider section></Divider>\n                <Input\n                  placeholder=\"نام مسئله\"\n                  className=\"rtl\"\n                  onChange={(e) => this.updateInput(e.target.value)}\n                  value={this.state.input}\n                />\n                <Input\n                  placeholder=\"سختی\"\n                  type=\"number\"\n                  max=\"10\"\n                  min=\"0\"\n                  className=\"rtl hardness\"\n                />\n                <br />\n                <br />\n                <label>\n                  پایه‌ی مناسب:\n                  <span> {this.state.appropriateGrades[0] + 'ام تا'} </span>\n                  <span> {this.state.appropriateGrades[1] + 'ام'} </span>\n                  <Slider\n                    labeled\n                    multiple\n                    color=\"red\"\n                    settings={this.state.settings}\n                  />\n                </label>\n                <Dropdown\n                  placeholder=\"منبع\"\n                  fluid\n                  selection\n                  allowAdditions\n                  onAddItem={(e, { value }) => {\n                    this.setState({\n                      allSources: [\n                        { text: value, value },\n                        ...this.state.allSources,\n                      ],\n                    });\n                  }}\n                  search\n                  options={this.state.allSources}\n                  className=\"rtl-dropdown\"\n                />\n                <Dropdown\n                  placeholder=\"رویداد\"\n                  fluid\n                  multiple\n                  selection\n                  search\n                  options={this.state.allEvents}\n                  className=\"rtl-dropdown\"\n                />\n                <Segment textAlign=\"center\">\n                  <Label attached=\"top\">مباحث کلی سوال</Label>\n                  <div>\n                    {this.state.question.shortInfo.tags.map((tag, index) => (\n                      <Tag\n                        name={tag.name}\n                        selectable\n                        key={index}\n                        index={index}\n                        selected={tag.selected}\n                        onChange={this.handleTagChange}\n                      ></Tag>\n                    ))}\n                  </div>\n                </Segment>\n                <Segment textAlign=\"center\">\n                  <Label attached=\"top\">مباحث ریزتر</Label>\n                  <div>\n                    {/* {this.state.subtags.map((subtag, index) => (\n                      <Tag\n                        name={subtag.name}\n                        selected={subtag.selected}\n                        onChange={this.handleSubtagChange}\n                        key={index}\n                        index={index}\n                        selectable\n                      ></Tag>\n                    ))} */}\n                  </div>\n                </Segment>\n              </Segment>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column\n              width={16}\n              only=\"mobile tablet\"\n              style={{ textAlign: 'center' }}\n            >\n              <Button\n                icon\n                labelPosition=\"left\"\n                positive\n                className=\"mobile-save-btn\"\n                onClick={this.handleSubmit}\n              >\n                <Icon name=\"save\" />\n                ذخیره\n              </Button>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // const properties = { state };\n  // const { account } = state.thisAccount;\n  // const { sources, events, tags } = properties;\n  // return {\n  //   account,\n  //   sources,\n  //   events,\n  //   tags,\n  // };\n};\n\nexport default connect(mapStateToProps, { submitQuestion })(Question);\n","import React, { Component } from 'react';\nimport {\n  Grid,\n  Header,\n  Segment,\n  Divider,\n  Label,\n  Table,\n  Pagination,\n} from 'semantic-ui-react';\n\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\n\n\nconst users = [\n  {\n    isLoggedIn: false,\n    name: 'Mamadreza Kiani',\n    username: 'MAMAD_KIA',\n    type: 'ADDER',\n    numberOfAddedQuestions: 2,\n    lastSeen: '99/4/19',\n  },\n  {\n    isLoggedIn: true,\n    name: 'Alireza HAshemi',\n    username: 'AmooHashem',\n    type: 'MENTOR',\n    numberOfAddedQuestions: 9,\n    lastSeen: '99/4/19',\n  },\n]\n\n\nclass UsersRating extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activePage: 1,\n      totalPages: 10,\n      users: users, //TODO: should be \"this.props.questions\"\n      thisUser: this.props.thisUser,\n      redirect: false,\n    };\n  }\n\n  handlePaginationChange = (e, { activePage }) => {\n    this.setState({ activePage: activePage, redirect: true })\n  }\n\n  render() {\n    const { users: data } = this.state\n\n    if (this.state.redirect) {\n      return <Redirect push to={\"/usersrating/page/\" + this.state.activePage} />;\n    }\n\n    return (\n      <Grid\n        centered\n        container\n        stackable\n        doubling\n        style={{ direction: 'rtl' }}\n      >\n        <Grid.Row centered relaxed>\n          <Header as=\"h1\" textAlign=\"center\">\n            کاربران\n          </Header>\n        </Grid.Row>\n        <Grid.Row columns={2}>\n\n          <Grid.Column width={11}>\n            <Segment>\n              <Label color='teal' ribbon='right'>\n                صفحه‌ی {this.state.activePage} از {this.state.totalPages}\n              </Label>\n              <Table\n                striped\n                fixed\n                textAlign='center'\n              >\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell\n                      width={1}\n                    >\n                      رتبه\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      width={3}\n                    >\n                      نام\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      width={2}\n                    >\n                      نقش\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      width={5}\n                    >\n                      تعداد سوالات افزوده\n                    </Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                  {data.map(({ name, numberOfAddedQuestions, type, username }, index) => (\n                    <Table.Row key={index} active={this.state.thisUser ? (this.state.thisUser.name === name ? true : false) : false}>\n                      <Table.Cell >{index + 1}</Table.Cell>\n                      <Table.Cell selectable>\n                        <a href={'/users/' + username}>{name}</a>\n                      </Table.Cell>\n                      <Table.Cell>{type}</Table.Cell>\n                      <Table.Cell>{numberOfAddedQuestions}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n              <div\n                style={{\n                  textAlign: 'center',\n                }}\n              >\n                <Pagination\n                  activePage={this.state.activePage}\n                  onPageChange={this.handlePaginationChange}\n                  totalPages={this.state.totalPages}\n                />\n              </div>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid >\n    );\n  }\n}\n\nconst mapStatoToProps = (state) => ({\n  activePage: state.UsersRatingPageActivePage,\n  totalPages: state.UsersRatingPageTotalPages,\n  users: state.users,\n  thisUser: state.thisUser,\n})\n\nexport default connect(mapStatoToProps)(UsersRating)","import _ from 'lodash'\nimport React, { Component } from 'react';\nimport {\n  Grid,\n  Header,\n  Segment,\n  Divider,\n  Label,\n  Table,\n  Pagination,\n} from 'semantic-ui-react';\n\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\n\n\nconst questionsShortInfo = [\n  {\n    id: 123,\n    name: 'مساحت و محیط رو دریاب',\n    tags: ['هندسه'],\n    difficulty: 3, // همونی که از ۱۰عه\n    reviewStatus: 'A', // وضعیت بازبینی سوال توسط منتورهای بالاسری\n  },\n  {\n    id: 456,\n    name: 'این یا اون؟',\n    tags: ['ترکیبیات', 'منطق'],\n    difficulty: 5, // همونی که از ۱۰عه\n    reviewStatus: 'W', // وضعیت بازبینی سوال توسط منتورهای بالاسری\n  },\n  {\n    id: 789,\n    name: 'Last SHAM!',\n    tags: ['رمزنگاری', 'منطق', 'احتمال'],\n    difficulty: 8, // همونی که از ۱۰عه\n    reviewStatus: 'W', // وضعیت بازبینی سوال توسط منتورهای بالاسری\n  },\n  {\n    id: 1323,\n    name: 'مساحت و محیط رو دریاب',\n    tags: ['هندسه'],\n    difficulty: 3, // همونی که از ۱۰عه\n    reviewStatus: 'A', // وضعیت بازبینی سوال توسط منتورهای بالاسری\n  },\n  {\n    id: 3456,\n    name: 'این یا اون؟',\n    tags: ['ترکیبیات', 'منطق'],\n    difficulty: 5, // همونی که از ۱۰عه\n    reviewStatus: 'W', // وضعیت بازبینی سوال توسط منتورهای بالاسری\n  },\n  {\n    id: 13789,\n    name: 'Last SHAM!',\n    tags: ['رمزنگاری', 'منطق'],\n    difficulty: 8, // همونی که از ۱۰عه\n    reviewStatus: 'W', // وضعیت بازبینی سوال توسط منتورهای بالاسری\n  },\n]\n\nclass ProblemSet extends Component {\n  state = {\n    activePage: 1,\n    totalPages: 10,\n    userType: 'ADMIN', //TODO: should be \"this.props.userType\"\n    questionsShortInfo: questionsShortInfo, //TODO: should be \"this.props.questionsShortInfo\"\n    redirect: false,\n  }\n\n  handlePaginationChange = (e, { activePage }) => {\n    this.setState({ activePage: activePage, redirect: true })\n  }\n\n  render() {\n    const { questionsShortInfo: data } = this.state\n\n    if (this.state.redirect) {\n      return <Redirect push to={\"/problemset/page/\" + this.state.activePage} />;\n    }\n\n    return (\n      <Grid\n        centered\n        container\n        stackable\n        doubling\n        style={{ direction: 'rtl' }}\n      >\n        <Grid.Row centered relaxed>\n          <Header as=\"h1\" textAlign=\"center\">\n            سوالات\n          </Header>\n        </Grid.Row>\n        <Grid.Row columns={2}>\n\n          <Grid.Column width={11}>\n            <Segment>\n              <Label color='teal' ribbon='right'>\n                صفحه‌ی {this.state.activePage} از {this.state.totalPages}\n              </Label>\n              <Table\n                selectable\n                color='teal'\n                celled\n                striped\n                fixed\n                textAlign='center'\n              >\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell\n                      textAlign='center'\n                      width={2}\n                    >\n                      شناسه\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      width={3}\n                    >\n                      نام\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      width={5}\n                    >\n                      موضوعات اصلی\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                      width={3}\n                    >\n                      درجه سختی\n                    </Table.HeaderCell>\n                    {this.state.userType === 'ADMIN' && (\n                      <Table.HeaderCell\n                        width={3}\n                      >\n                        وضعیت بازبینی\n                      </Table.HeaderCell>\n                    )}\n                  </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                  {_.map(data, ({ id, name, tags, difficulty, reviewStatus }) => (\n                    <Table.Row key={id}>\n                      <Table.Cell >{id}</Table.Cell>\n                      <Table.Cell textAlign='right' selectable>\n\n                        <a href={'/question/' + id}>{name}</a>\n                      </Table.Cell>\n                      <Table.Cell textAlign='right'>\n                        <Label>{tags[0]}</Label>\n                        {tags[1] && (\n                          <Label>{tags[1]}</Label>\n                        )}\n                        {tags[2] && (\n                          <Label>{tags[2]}</Label>\n                        )}\n                      </Table.Cell>\n                      <Table.Cell>{difficulty}</Table.Cell>\n                      {this.state.userType === 'ADMIN' && (\n                        <Table.Cell>{reviewStatus}</Table.Cell>\n                      )}\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n              <div\n                style={{\n                  textAlign: 'center',\n                }}\n              >\n                <Pagination\n                  activePage={this.state.activePage}\n                  onPageChange={this.handlePaginationChange}\n                  totalPages={this.state.totalPages}\n                />\n              </div>\n            </Segment>\n          </Grid.Column>\n\n          <Grid.Column\n            width={5}\n            style={{ textAlign: 'right', direction: 'rtl' }}\n          >\n            <Segment>\n              <Header content={'جستجو'} as=\"h2\" textAlign=\"center\" />\n              <Divider></Divider>\n              <Header content={'به زودی :)'} as=\"h3\" textAlign=\"center\" />\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid >\n    );\n  }\n}\n\nconst mapStatoToProps = (state) => {\n  const thisUser = state.thisUser;\n  const userType = thisUser ? thisUser.type : null;\n  return ({\n    activePage: state.problemSetPageActivePage,\n    totalPages: state.problemSetPageTotalPages,\n    questionsShortInfo: state.questionsShortInfo,\n    userType,\n  })\n}\n\nexport default connect(mapStatoToProps)(ProblemSet)","import React, { Component } from 'react';\nimport { Icon, Image, Menu, Sidebar, Responsive } from 'semantic-ui-react';\n\nconst NavBarMobile = ({\n  children,\n  leftItems,\n  onPusherClick,\n  onToggle,\n  rightItems,\n  visible,\n}) => (\n  <Sidebar.Pushable>\n    <Sidebar\n      as={Menu}\n      animation=\"overlay\"\n      icon=\"labeled\"\n      vertical\n      visible={visible}\n    >\n      {leftItems}\n    </Sidebar>\n\n    <Sidebar.Pusher\n      dimmed={visible}\n      onClick={onPusherClick}\n      style={{ minHeight: '100vh' }}\n    >\n      <Menu fixed=\"top\" className=\"borderless\">\n        <Menu.Item style={{ padding: '5px 10px' }}>\n          <Image size=\"mini\" src={process.env.PUBLIC_URL + '/logo.png'} />\n        </Menu.Item>\n        <Menu.Item\n          onClick={onToggle}\n          style={{\n            paddingLeft: '7px',\n            paddingRight: '4px',\n          }}\n        >\n          <Icon name=\"sidebar\" />\n        </Menu.Item>\n        <Menu.Menu position=\"right\">{rightItems}</Menu.Menu>\n      </Menu>\n      {children}\n    </Sidebar.Pusher>\n  </Sidebar.Pushable>\n);\n\nconst NavBarDesktop = ({ leftItems, rightItems }) => (\n  <Menu fixed=\"top\" className=\"borderless\">\n    <Menu.Item style={{ padding: '5px 10px' }}>\n      <Image size=\"mini\" src={process.env.PUBLIC_URL + '/logo.png'} />\n    </Menu.Item>\n    {leftItems}\n    <Menu.Menu position=\"right\">{rightItems}</Menu.Menu>\n  </Menu>\n);\nconst NavBarChildren = ({ children }) => (\n  <div\n    style={{\n      paddingTop: '5em',\n    }}\n  >\n    {children}\n  </div>\n);\n\nexport default class NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n    };\n    this.handlePusher = this.handlePusher.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handlePusher = () => {\n    const { visible } = this.state;\n\n    if (visible) this.setState({ visible: false });\n  };\n\n  handleToggle = () => this.setState({ visible: !this.state.visible });\n\n  render() {\n    const { children } = this.props;\n    const { leftItems, rightItems } = this.props.config;\n    const { visible } = this.state;\n    return (\n      <div>\n        <Responsive {...Responsive.onlyMobile}>\n          <NavBarMobile\n            leftItems={leftItems}\n            onPusherClick={this.handlePusher}\n            onToggle={this.handleToggle}\n            rightItems={rightItems}\n            visible={visible}\n          >\n            <NavBarChildren>{children}</NavBarChildren>\n          </NavBarMobile>\n        </Responsive>\n        <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n          <NavBarDesktop leftItems={leftItems} rightItems={rightItems} />\n          <NavBarChildren>{children}</NavBarChildren>\n        </Responsive>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Label, Menu, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst leftItems = () => [];\n\nconst rightItems = (config) => {\n  const Items = [];\n  if (!config.loggedIn) {\n    Items.push(\n      <Menu.Item name=\"message\">\n        <Label style={{ direction: 'rtl' }}>\n          شما هنوز وارد نشدید!\n        </Label>\n      </Menu.Item>,\n      <Menu.Item name=\"login\">\n        <Button as={Link} to=\"/login\" primary>\n          ورود\n        </Button>\n      </Menu.Item>,\n      <Menu.Item name=\"register\">\n        <Button as={Link} to=\"/registration\" positive>\n          ثبت‌نام\n        </Button>\n      </Menu.Item>,\n    );\n  } else {\n    Items.push(\n      <Menu.Item name=\"message\">\n        <Label style={{ direction: 'rtl' }}>\n          {config.user.first_name} خوش اومدی!\n        </Label>\n      </Menu.Item>,\n      <Menu.Item name=\"logout\">\n        <Button as={Link} to=\"/\" primary>\n          خروج\n        </Button>\n      </Menu.Item>,\n    );\n  }\n  return Items;\n};\n\nexport default function navbarItems(config) {\n  return {\n    leftItems: leftItems(config),\n    rightItems: rightItems(config),\n  };\n}","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const isLoggedIn = true; // TODO: fix it by redux\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: '/login', state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport LoginPage from '../containers/Login';\nimport RegistrationPage from '../containers/Registration';\nimport Homepage from '../containers/HomePage';\nimport QuestionView from '../containers/QuestionView';\nimport Question from '../containers/Question';\nimport AccountsRating from '../containers/UsersRating';\nimport ProblemSet from '../containers/ProblemSet';\n\nimport NavBar from '../components/NavBar/NavBar';\nimport NavBarItems from '../components/NavBar/NavBarItems';\n\nimport '../styles/App.css';\nimport PrivateRoute from './PrivateRoute';\n\nconst Root = () => (\n  <div>\n    <NavBar config={NavBarItems({ loggedIn: false })}>\n      <Switch>\n        <Route path=\"/login\" component={LoginPage} />\n        <Route path=\"/registration\" component={RegistrationPage} />\n        <PrivateRoute path=\"/question/:id\" component={QuestionView} />\n        <PrivateRoute path=\"/edit_question/:id\" component={Question} />\n        <PrivateRoute path=\"/rating\" component={AccountsRating} />\n        <PrivateRoute path=\"/problemset\" component={ProblemSet} />\n        <Route path=\"/\" component={Homepage} />\n      </Switch>\n    </NavBar>\n  </div>\n);\nexport default Root;\n","import * as actionTypes from '../actions/actionTypes';\n\nfunction account(\n  state = { loggedIn: false, user: null, isFetching: false, token: null },\n  action\n) {\n  switch (action.type) {\n    case actionTypes.REGISTER_REQUEST:\n      return { ...state, isFetching: true };\n\n    case actionTypes.REGISTER_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        token: action.response.token,\n      };\n\n    case actionTypes.REGISTER_FAILURE:\n      return { ...state, isFetching: false };\n\n    //#######################\n\n    case actionTypes.LOGIN_REQUEST:\n      return { ...state, isFetching: true };\n\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        loggedIn: true,\n        token: action.response.token,\n      }\n\n    case actionTypes.LOGIN_FAILURE:\n      return { ...state, isFetching: false }\n\n    //#######################\n\n    case actionTypes.LOGOUT_REQUEST:\n      return { ...state, isFetching: true };\n\n    case actionTypes.LOGOUT_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        token: null,\n        loggedIn: false\n      };\n\n    case actionTypes.LOGOUT_FAILURE:\n      return { ...state, isFetching: false }\n\n    //#######################\n\n    default:\n      return state;\n  }\n}\n\nexport default account;\n","import * as actionTypes from '../actions/actionTypes';\n\nfunction questionProperties(state = {}, action) {\n  switch (action.type) {\n    case actionTypes.QUESTION_PROPERTIES_REQUEST:\n      return { ...state, isLoading: true };\n    case actionTypes.QUESTION_PROPERTIES_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        questionProperties: action.response.questionProperties,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default questionProperties;\n","import * as actionTypes from '../actions/actionTypes';\n\nfunction questions(state = {}, action) {\n  switch (action.type) {\n    case actionTypes.QUESTION_SUCCESS:\n      return {\n        ...state,\n        questions: {\n          ...state.questions,\n          [action.response.question.id]: action.response.question,\n        },\n        isFetching: false,\n      };\n    case action.QUESTION_LIST_REQUEST:\n      return {\n        ...state,\n        questions: action.response.questions,\n        isFetching: false,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default questions;\n","import * as actionTypes from '../actions/actionTypes';\n\nfunction usersList(state = {}, action) {\n  switch (action.type) {\n    case actionTypes.USER_LIST_REQUEST:\n      return { ...state, isLoading: true };\n    case actionTypes.USER_LIST_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        usersList: action.payload.usersList,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default usersList;\n","import { combineReducers } from 'redux';\n\nimport account from './account';\nimport questionProperties from './questionProperties';\nimport questions from './questions';\nimport usersList from './usersList';\n\nconst allReducers = combineReducers({\n  account,\n  questionProperties,\n  questions,\n  usersList,\n});\nexport default allReducers;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport api from '../middleware/api/api';\nimport rootReducer from '../reducers';\n\nconst configureStore = (preloadedState) =>\n  createStore(rootReducer, preloadedState, applyMiddleware(thunk, api));\n\nexport default configureStore;\n","/* global MathJax */\nconst to_svg = (latex) => {\n  let res = MathJax.tex2svg(latex, {\n    em: 16,\n    ex: 8,\n    containerWidth: 579,\n    display: true,\n    scale: 1,\n    lineWidth: 1000000,\n  });\n  res.innerHTML += '&nbsp;';\n  return res;\n};\n\nexport default to_svg;\n"],"sourceRoot":""}